(load "src/encoder/lsb.sch")

(define (run-lsb-encoding-tests)
    (display "tst/encoding/lsb.sch") (newline)
    (encode-lsb-tests)
    (encode-lsb-in-bytevector-tests))

(define (encode-lsb-tests)
   (assert (= (encode-lsb 57 0) 56))
   (assert (= (encode-lsb 4 0) 4))
   (assert (= (encode-lsb -1232 0) -1232))
   (assert (= (encode-lsb -2343 0) -2344))

   (assert (= (encode-lsb 57 1) 57))
   (assert (= (encode-lsb 4 1) 5))
   (assert (= (encode-lsb -1232 1) -1231))
   (assert (= (encode-lsb -2343 1) -2343)))

(define (encode-lsb-in-bytevector-tests)
   (let ((bv (make-bytevector 4 0)))
      (bytevector-s8-set! bv 0 5)
      (bytevector-s8-set! bv 1 5)
      (bytevector-s8-set! bv 2 8)
      (bytevector-s8-set! bv 3 8)
      (encode-lsb-in-bytevector bv 0 1)
      (encode-lsb-in-bytevector bv 1 0)
      (encode-lsb-in-bytevector bv 2 1)
      (encode-lsb-in-bytevector bv 3 0)
      (assert (= (bytevector-s8-ref bv 0) 5))
      (assert (= (bytevector-s8-ref bv 1) 4))
      (assert (= (bytevector-s8-ref bv 2) 9))
      (assert (= (bytevector-s8-ref bv 3) 8))))
